```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
<!-- install packages hidden-->
```{r echo=FALSE, include=FALSE}
install.packages("caret", repos="http://cran.us.r-project.org")
install.packages('tidyverse', repos="http://cran.us.r-project.org")
install.packages("rsample",repos="http://cran.us.r-project.org")
install.packages('broom', repos="http://cran.us.r-project.org")
install.packages('corrplot', repos="http://cran.us.r-project.org")
install.packages('ISLR', repos="http://cran.us.r-project.org")
install.packages("caret", repos="http://cran.us.r-project.org")
install.packages("klaR",repos="http://cran.us.r-project.org")
install.packages("e1071",repos="http://cran.us.r-project.org")
#install.packages('leaps', repos="http://cran.us.r-project.org")
install.packages('MASS', repos="http://cran.us.r-project.org")
#reference libraries
library(tidyverse)
library(rsample)
library(klaR)
library(broom)
library(corrplot)
library(ISLR)
library(readxl)
library(caret)
library(e1071)
#library(leaps)
library(MASS)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
logit <- function (ps)
## define the logit function.
{
log(ps/(1-ps))
}
```{r ReadFile}
attrition <- read_excel("C:/git/CaseStudy2-master/CaseStudy2-data.xlsx")
attrition <- attrition[,-c(9,10,22,27),drop=FALSE]
dfcat <- attrition
dfcat$DailyRate <- NULL
dfcat$EmployeeCount <- NULL
dfcat$EmployeeNumber <- NULL
dfcat$HourlyRate <- NULL
dfcat$StandardHours <- NULL
dfcat$Over18 <- NULL
dfcat$PerformanceRating <- NULL
dfcat$MonthlyRate <- NULL
dfcat$Agecat<-cut(dfcat$Age, seq(18,60,10), right=FALSE,labels=c("Under_27","28-37","38-47",">48"))
dfcat$Age <- NULL
dfcat$DistanceFromHome<-cut(dfcat$DistanceFromHome, seq(0,30,10), right=FALSE, labels=c("Under_10","10_to_20","Over_20"))
dfcat$Education[dfcat$Education==1] = "Below_College"
dfcat$Education[dfcat$Education==2] = "College"
dfcat$Education[dfcat$Education==3] = "Bachelor"
dfcat$Education[dfcat$Education==4] = "Master"
dfcat$Education[dfcat$Education==5] = "Doctor"
dfcat$JobInvolvement[dfcat$JobInvolvement == 1]="Low"
dfcat$JobInvolvement[dfcat$JobInvolvement == 2]="Medium"
dfcat$JobInvolvement[dfcat$JobInvolvement == 3]="High"
dfcat$JobInvolvement[dfcat$JobInvolvement == 4]="Very_High"
dfcat$JobSatisfaction[dfcat$JobSatisfaction==1]="Low"
dfcat$JobSatisfaction[dfcat$JobSatisfaction==2]="Medium"
dfcat$JobSatisfaction[dfcat$JobSatisfaction==3]="High"
dfcat$JobSatisfaction[dfcat$JobSatisfaction==4]="Very_High"
dfcat$MonthlyIncome<-cut(dfcat$MonthlyIncome, seq(0,20000,5000), right=FALSE, labels=c("Under_5,000","Under_10,000","Under_15,000","Under_20,000"))
dfcat$NumCompaniesWorked<-cut(dfcat$NumCompaniesWorked, seq(0,10,5), right=FALSE, labels=c("Less_than_5","Greater_than_5"))
dfcat$PercentSalaryHike<-cut(dfcat$PercentSalaryHike, seq(10,25,5), right=FALSE, labels=c("Less_than_15%","Less_than_20%","Greater_than_20%"))
dfcat$RelationshipSatisfaction[dfcat$RelationshipSatisfaction == 1]="Low"
dfcat$RelationshipSatisfaction[dfcat$RelationshipSatisfaction == 2]="Medium"
dfcat$RelationshipSatisfaction[dfcat$RelationshipSatisfaction == 3]="High"
dfcat$RelationshipSatisfaction[dfcat$RelationshipSatisfaction == 4]="Very_High"
dfcat$EnvironmentSatisfaction[dfcat$EnvironmentSatisfaction==1]="Low"
dfcat$EnvironmentSatisfaction[dfcat$EnvironmentSatisfaction==2]="Medium"
dfcat$EnvironmentSatisfaction[dfcat$EnvironmentSatisfaction==3]="High"
dfcat$EnvironmentSatisfaction[dfcat$EnvironmentSatisfaction==4]="Very_High"
#Categorize StockOptionLevel
dfcat$StockOptionLevel[dfcat$StockOptionLevel==0]="None"
dfcat$StockOptionLevel[dfcat$StockOptionLevel==1]="Low"
dfcat$StockOptionLevel[dfcat$StockOptionLevel==2]="Medium"
dfcat$StockOptionLevel[dfcat$StockOptionLevel==3]="High"
dfcat$TotalWorkingYears<-cut(dfcat$TotalWorkingYears, seq(0,40,10), right=FALSE, labels=c("Less_than_10","11_to_20","21_to_30","Gt_30"))
#Categorize TrainingTimesLastYear
dfcat$TrainingTimesLastYear<-cut(dfcat$TrainingTimesLastYear, seq(0,6,2), right=FALSE, labels=c("Less_than_two","Two-Four","Four-Six"))
dfcat$WorkLifeBalance[dfcat$WorkLifeBalance==1]="Bad"
dfcat$WorkLifeBalance[dfcat$WorkLifeBalance==2]="Good"
dfcat$WorkLifeBalance[dfcat$WorkLifeBalance==3]="Better"
dfcat$WorkLifeBalance[dfcat$WorkLifeBalance==4]="Best"
dfcat$YearsAtCompany<-cut(dfcat$YearsAtCompany, seq(0,40,5), right=FALSE, labels=c("Five_or_Less","Six_to_Ten","Eleven_to_Fifteen","Sixteen_to_Twenty","TwentyOne_to_TwentyFive","TwentySix_to_Thirty","ThirtyOne_to_ThirtyFive","Greater_than_ThrityFive"))
dfcat$YearsInCurrentRole<-cut(dfcat$YearsInCurrentRole, seq(0,20,5), right=FALSE, labels=c("Five_or_Less","Six_to_Ten","Eleven_to_Fifteen","Sixteen_to_Twenty"))
dfcat$YearsSinceLastPromotion<-cut(dfcat$YearsSinceLastPromotion, seq(0,15,5), right=FALSE, labels=c("Five_or_Less","Six_to_Ten","Eleven_to_Fifteen"))
dfcat$YearsWithCurrManager<-cut(dfcat$YearsWithCurrManager, seq(0,20,5), right=FALSE, labels=c("Five_or_Less","Six_to_Ten","Eleven_to_Fifteen", "Sixteen_to_Twenty"))
library(e1071)
NB_All<- naiveBayes(Attrition~. ,data=dfcat, scale=T, type="prob")
#list probabilities
NB_All$tables
# Create training (70%) and test (30%) sets
set.seed(123)
#70 30 split
splitData <- initial_split(dfcat, prop = .7, strata = "Attrition")
train <- training(splitData)
test  <- testing(splitData)
# create response and feature data
features <- setdiff(names(train), "Attrition")
x <- train[, features]
y <- train$Attrition
tgrid <- data.frame(fL=c(0,0.5,1.0), usekernel = TRUE, adjust=c(0,0.5,1.0))
train_control <- trainControl(method = "cv", number = 5)
# train model
nbayes_model <- train(x = x,y = y,method = "nb",trControl = train_control,tuneGrid = tgrid)
confusionMatrix(nbayes_model)
pred <- predict(nbayes_model, newdata = test)
ggplot(test, aes(Attrition, pred, color = Attrition)) +
geom_jitter(width = 0.2, height = 0.1, size=2) +
labs(title="Confusion Matrix",
subtitle="Predicted Attrition vs. Actual Employee Attrition",
y="Predicted",
x="Truth",
caption="NaiveBayes")
Gender_prob <- subset(data.frame(NB_All$tables$Gender), Y=="Yes")
Gender_prob
barplot(Gender_prob$Freq, names.arg = Gender_prob$Gender, ylab="Attrition probability",main="Gender vs Attrition", cex.names=0.7,col="red",las=1)
MaritalStat_prob <- subset(data.frame(NB_All$tables$MaritalStatus),Y=="Yes")
MaritalStat_prob
barplot(MaritalStat_prob$Freq, names.arg = MaritalStat_prob$MaritalStatus, ylab="Attrition  Probability",main="Marital Status vs Attrition", cex.names=0.7,col="red",las=1)
Age_prob <- subset(data.frame(NB_All$tables$Agecat),Y=="Yes")
Age_prob
barplot(Age_prob$Freq, names.arg = Age_prob$Agecat, ylab="Attrition  Probability",main="Age vs Attrition", cex.names=0.7,col="red",las=1)
WorkYears_prob <- subset(data.frame(NB_All$tables$TotalWorkingYears),Y=="Yes")
WorkYears_prob
barplot(WorkYears_prob$Freq, names.arg = WorkYears_prob$TotalWorkingYears, ylab="Attrition  Probability",main="Working Years vs Attrition", cex.names=0.7,col="red",las=1)
install.packages("caret", repos="http://cran.us.r-project.org")
install.packages("caret", repos = "http://cran.us.r-project.org")
knitr::opts_chunk$set(echo = TRUE)
library(caret)
install.packages("caret", repos="http://cran.us.r-project.org")
install.packages("caret", repos = "http://cran.us.r-project.org")
knitr::opts_chunk$set(echo = TRUE)
library(caret)
install.packages("caret", repos="http://cran.us.r-project.org")
install.packages("caret", repos = "http://cran.us.r-project.org")
